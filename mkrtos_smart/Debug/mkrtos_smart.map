
Discarded input sections

 .text          0x00000000        0x0 ./src/main.o
 .data          0x00000000        0x0 ./src/main.o
 .bss           0x00000000        0x0 ./src/main.o
 .text.main     0x00000000       0x38 ./src/main.o
 .comment       0x00000000       0x4a ./src/main.o
 .ARM.attributes
                0x00000000       0x2c ./src/main.o

Memory Configuration

Name             Origin             Length             Attributes
RAM              0x00008000         0x08000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

START GROUP
LOAD c:/program files (x86)/gnu arm embedded toolchain/10 2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1\libgcc.a
LOAD c:/program files (x86)/gnu arm embedded toolchain/10 2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib\libc.a
LOAD c:/program files (x86)/gnu arm embedded toolchain/10 2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib\libc.a
LOAD c:/program files (x86)/gnu arm embedded toolchain/10 2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib\libm.a
LOAD c:/program files (x86)/gnu arm embedded toolchain/10 2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/lib\librdimon.a
END GROUP
LOAD ./src/main.o

.text           0x00008000        0x0
                [!provide]                PROVIDE (__image_start = .)
                [!provide]                PROVIDE (__text_start = .)
                [!provide]                PROVIDE (__vectors_start = .)
 *(.vectors)
                0x00008000                . = ALIGN (0x4)
                [!provide]                PROVIDE (__vectors_end = .)
 *(.init)
                0x00008000                . = ALIGN (0x4)
 *(.text)
                0x00008000                . = ALIGN (0x4)
 *(.rodata)
                0x00008000                . = ALIGN (0x4)
 *(.rodata*)
                0x00008000                . = ALIGN (0x4)
                0x00008000                etext = .
                [!provide]                PROVIDE (__text_end = .)

.glue_7         0x00008000        0x0
 .glue_7        0x00008000        0x0 linker stubs

.glue_7t        0x00008000        0x0
 .glue_7t       0x00008000        0x0 linker stubs

.vfp11_veneer   0x00008000        0x0
 .vfp11_veneer  0x00008000        0x0 linker stubs

.v4_bx          0x00008000        0x0
 .v4_bx         0x00008000        0x0 linker stubs
                0x00008000                . = ALIGN (0x4)
                0x00008000                _etext = .
                [!provide]                PROVIDE (etext = .)

.data           0x00008000        0x0
                [!provide]                PROVIDE (__data_start__ = .)
                0x00008000                _data = .
 *(.data)
                0x00008000                . = ALIGN (0x4)
                [!provide]                PROVIDE (__data_end__ = .)
                0x00008000                . = ALIGN (0x4)
                0x00008000                _edata = .
                [!provide]                PROVIDE (edata = .)
                0x00008000                sbss = .

.bss            0x00008000        0x0
                [!provide]                PROVIDE (__bss_start__ = .)
 *(.bss)
 *(.bss.**)
 *(COMMON)
                0x00008000                . = ALIGN (0x4)
                [!provide]                PROVIDE (__bss_end__ = .)
                0x00008000                ebss = .
                0x00000000                bss_size = (ebss - sbss)

.heap           0x00008000        0x0
                0x00008000                . = ALIGN (0x8)
                0x00008000                end = .
OUTPUT(mkrtos_smart.elf elf32-littlearm)
LOAD linker stubs
