__asm__(
".text \n"
".global " START " \n"
".type " START ",%function \n"
START ": \n"
"	mov fp, #0 \n"
"	mov lr, #0 \n"
#ifdef MKRTOS
"__start: \n"
"    movs    r1, #0 \n"
"    adr     r2, " START " \n"
"    bic     r2, r2, #1 \n"
"    ldr     r0, = __data_start__ \n"
"    add     r0, r0, r2 \n"
"    ldr     r3, = __data_end__ \n"
"    add     r3, r3, r2 \n"
"    b       LoopCopyDataInit \n"
"CopyDataInit: \n"
"    ldr     r2, [r0, r1] \n"
"    str     r2, [r9, r1] \n"
"    adds    r1, r1, #4 \n"
"LoopCopyDataInit: \n"
"    adds    r2, r0, r1 \n"
"    cmp     r2, r3 \n"
"    bcc     CopyDataInit \n"
#endif
"	ldr a2, 1f \n"
"	add a2, pc, a2 \n"
"	mov a1, sp \n"
"2:	and ip, a1, #-16 \n"
"	mov sp, ip \n"
"	bl " START "_c \n"
".weak _DYNAMIC \n"
".hidden _DYNAMIC \n"
".align 2 \n"
"1:	.word _DYNAMIC-2b \n"
);
